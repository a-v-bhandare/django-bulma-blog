version: "3.3"

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    env_file: .env
    restart: unless-stopped
    ports:
      - "1337:80"
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    network_mode: bridge
    depends_on:
      - web

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge

  db:
    image: postgres:alpine
    env_file: .env
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=ceiphrcom
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - DATABASE=postgres
    ports:
      - "5432:5432"

  web:
    build: 
      context: .
      dockerfile: ceiphr_proj/Dockerfile.prod
    restart: unless-stopped
    container_name: ceiphrcom
    env_file: .env
    command: gunicorn ceiphr.wsgi:application --bind 0.0.0.0:8000
    expose:
    - 8000
    ports:
      - "8000:8000"
    volumes:
      - ./ceiphr_proj/:/usr/src/app/
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    environment: 
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=ceiphrcom
      - SQL_USER=postgres
      - SQL_PASSWORD=$SQL_PASSWORD
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - db
    links:
      - db:db

volumes:
  postgres_data:
  static_volume:
  media_volume:
  conf:
  vhost:
  html:
  dhparam:
  certs:
